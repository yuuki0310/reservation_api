openapi: 3.0.0
info:
  title: Reservation API
  description: 店とユーザーの予約状況を確認するAPI
  version: 1.0.0
  
servers:
  - url: 'http://localhost:8080'
    description: local
  - url: 'https://8ib4rtllwk.execute-api.ap-northeast-1.amazonaws.com/'
    description: develop

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

paths:
  /stores/{storeId}/reservations:
    get:
      summary: 店の予約状況を確認（月ごと）
      description: 指定した店舗の特定の月の予約状況を取得します
      parameters:
        - in: path
          name: storeId
          required: true
          schema:
            type: string
          description: 店舗のID
        - in: query
          name: year
          required: true
          schema:
            type: integer
            example: 2024
          description: 予約を確認したい年（必須）
        - in: query
          name: month
          required: true
          schema:
            type: integer
            example: 11
            minimum: 1
            maximum: 12
          description: 予約を確認したい月（1～12の範囲）
      responses:
        '200':
          description: 成功時のレスポンス
          content:
            application/json:
              schema:
                type: object
                properties:
                  storeId:
                    type: string
                    description: 店舗のID
                    example: "12345"
                  year:
                    type: integer
                    description: 予約確認の対象年
                    example: 2024
                  month:
                    type: integer
                    description: 予約確認の対象月
                    example: 11
                  reservations:
                    type: array
                    description: 月の全日分の予約情報を含む配列
                    items:
                      type: object
                      properties:
                        date:
                          type: string
                          format: date
                          description: 予約日
                          example: "2024-11-01T00:00:00+09:00"
                        weekday:
                          type: integer
                          description: 日曜日を0とした曜日の数字
                          example: 5
                        isHoliday:
                          type: boolean
                          description: 祝日かどうか
                          example: false
                        slots:
                          type: array
                          description: 当日の予約スロット情報
                          items:
                            type: object
                            properties:
                              from:
                                type: string
                                format: time
                                description: 予約開始時間
                                example: "2024-11-01T16:00:00+09:00"
                              to:
                                type: string
                                format: time
                                description: 予約終了時間
                                example: "2024-11-01T17:45:00+09:00"
                              status:
                                type: string
                                description: 予約ステータス（予約可能、予約済みなど）
                                enum: ["available", "booked"]
                                example: "available"
        '404':
          description: 店舗が見つからないか、指定された月の予約が存在しない場合
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "No reservations found for this store in the specified month"

  /users/{uuid}/reservations:
    post:
      summary: 予約の作成
      description: 新しい予約を作成します
      parameters:
        - in: path
          name: uuid
          required: true
          schema:
            type: string
          description: 確認するユーザーのUUID
          example: "08a79fce-b475-11ef-95bd-0ed2b352ed43"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                store_id:
                  type: integer
                  example: 1
                from:
                  type: string
                  format: date-time
                  example: "2024-11-05T14:30:00Z"
                to:
                  type: string
                  format: date-time
                  example: "2024-11-05T15:30:00Z"
              required:
                - uuid
                - from
                - to
      responses:
        '201':
          description: 予約が正常に作成されました
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Reservation created successfully"
        '400':
          description: リクエストのバリデーションエラー
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Invalid reservation data"

    get:
      summary: ユーザーの予約状況を確認
      description: 特定のユーザーが行った予約を取得します
      parameters:
        - in: path
          name: uuid
          required: true
          schema:
            type: string
          description: 確認するユーザーのUUID。
          example: "08a79fce-b475-11ef-95bd-0ed2b352ed43"
      security:
        - BearerAuth: []
      responses:
        '200':
          description: 指定したユーザーの予約一覧を返します
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    storeId:
                      type: integer
                      example: 1
                    date:
                      type: string
                      example: "2024/11/05(火)"
                    from:
                      type: string
                      format: date-time
                      example: "15:00"
                    to:
                      type: string
                      format: date-time
                      example: "16:00"
        '404':
          description: 指定したユーザーの予約が見つからない場合
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "No reservations found for this user"
